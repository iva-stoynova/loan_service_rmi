package m22763project4;

import java.awt.Color;
import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.UnknownHostException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.HashMap;


/**
 *
 * @author Iwa Stojnowa
 */
public class Client extends javax.swing.JFrame {

    private String[] currencies;
    private LoanService loanService;
    private static int i;
private String clientAddress;
    public Client() {


        super("Loan Client Calculator");
        try {
            loanService = (LoanService) Naming.lookup("LoanService");
            clientAddress = InetAddress.getLocalHost().getHostAddress();
             i = loanService.clientConnect(clientAddress);
            this.setTitle("Loan Client Calculator" + i);
            currencies = loanService.getCurrenciesCodes();

            initComponents();

        } catch (MalformedURLException ex) {
            System.err.println("Malformed URL Ex error: " + ex.getMessage());
            ex.printStackTrace();
            System.exit(1);
        } catch (NotBoundException ex) {
            System.err.println("Not bound ex error: " + ex.getMessage());
            ex.printStackTrace();
            System.exit(1);
        } catch (RemoteException ex) {
            System.err.println("RMI error: " + ex.getMessage());
            ex.printStackTrace();
            System.exit(1);
        } catch (UnknownHostException ex) {
            System.err.println("Unknown host ex error: " + ex.getMessage());
            ex.printStackTrace();
            System.exit(1);
        }
    }

    private String[] getCurrencies() {
        return currencies;
    }

    /**
     * Validate client input fields
     * @return True if input is valid and false otherwise
     */
    private boolean validateFields() {

        boolean valid = true;

        //validate annual interest rate
        try {
            double interestRate = Double.parseDouble(jInterestRate.getText());
            if (interestRate <= 0 || interestRate >= 100) {
                throw new NumberFormatException();
            }
            jInterestRate.setBackground(Color.WHITE);
        } catch (NumberFormatException ex) {
            valid = false;
            log("Invalid interest rate\n");
            jInterestRate.setBackground(Color.RED);
        }

        //validate years
        try
        {
            int years = Integer.parseInt(jYears.getText());
            if (years <= 0)
            {
                throw new NumberFormatException();
            } 
        }
        catch (NumberFormatException ex)
        {
            valid = false;
            log("Invalid years\n");
        }

        //validate amount
        try
        {
            double amount = Double.parseDouble(jAmount.getText());
            if (amount <= 0)
            {
                throw new NumberFormatException();
            }
            jAmount.setBackground(Color.WHITE);
        } 
        catch (NumberFormatException ex)
        {
            valid = false;
            log("Invalid amount\n");
            jAmount.setBackground(Color.RED);
        }

        if (!valid)
        {
            this.getToolkit().beep();
        }
        return valid;

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jInterestRate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jYears = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jAmount = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jCurrencies = new javax.swing.JComboBox(this.getCurrencies());
        jScrollPane1 = new javax.swing.JScrollPane();
        jOutputConsole = new javax.swing.JTextArea();
        jSubmit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Annual interest rate");

        jLabel7.setText("Number of years");

        jLabel5.setText("Loan amount");

        jLabel6.setText("Currency");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jInterestRate, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jYears, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jCurrencies, javax.swing.GroupLayout.Alignment.TRAILING, 0, 94, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jInterestRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jYears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jCurrencies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jOutputConsole.setColumns(20);
        jOutputConsole.setRows(5);
        jScrollPane1.setViewportView(jOutputConsole);

        jSubmit.setText("Submit");
        jSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Calculate loan payments
     * @param evt
     */
    private void jSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSubmitActionPerformed

        StringBuffer result = new StringBuffer();

        if (validateFields())
        {

            try
            {

                result.append("Annual interest rate: ");
                result.append(jInterestRate.getText());
                result.append("\nNumber of years: ");
                result.append(jYears.getText());
                result.append("\nLoan amount: ");
                result.append(jAmount.getText());
                result.append(" ");
                result.append(jCurrencies.getSelectedItem().toString());
                result.append("\n");

                HashMap payments = loanService.getPayments(
                        Double.parseDouble(jInterestRate.getText()),
                        Integer.parseInt(jYears.getText()),
                        jCurrencies.getSelectedItem().toString(),
                        Double.parseDouble(jAmount.getText()),i, clientAddress);


                result.append("Monthly payment: ");
                result.append(payments.get("monthly"));
                result.append(" BGN\n");
                result.append("Total payment: ");
                result.append(payments.get("total"));
                result.append(" BGN");

            } catch (RemoteException ex)
            {
                result.append("Error while retrieving service response: ");
                result.append(ex.getMessage() + "\n");
                ex.printStackTrace();
            } 
            catch (NumberFormatException ex)
            {
                result.append("Invalid input field data: ");
                result.append(ex.getMessage() + "\n");
                ex.printStackTrace();
            }
        } else {
            result.append("Invalid input field data\n");
        }

        jOutputConsole.setText(result.toString());
    }//GEN-LAST:event_jSubmitActionPerformed

    public void log(String message) {
        jOutputConsole.append(message);
    }
    
    /**
     * Program entry point
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jAmount;
    private javax.swing.JComboBox jCurrencies;
    private javax.swing.JTextField jInterestRate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextArea jOutputConsole;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSubmit;
    private javax.swing.JTextField jYears;
    // End of variables declaration//GEN-END:variables
}
